name: CI
on:
  pull_request:
  push:
    branches: [main]
    tags: ["*"]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: root
      AWS_SECRET_ACCESS_KEY: password
      AWS_ENDPOINT_URL: http://localhost:9000
      AWS_REGION: us-east-1
    steps:
      - uses: actions/checkout@v4
      - name: Initialize containers
        uses: gacts/run-and-post-run@v1
        with:
          run: |
            docker network create iceberg_net
            docker run -d --name minio \
              --network=iceberg_net -p 9000:9000 \
              -e MINIO_ROOT_USER=root \
              -e MINIO_ROOT_PASSWORD=password \
              -e MINIO_DOMAIN=minio \
              -v ${{ github.workspace }}/assets/tpch:/input minio/minio:latest server /data/
            until (docker exec minio mc alias set minio http://localhost:9000 root password) do echo '... waiting ...' && sleep 1; done;
            docker exec minio mc mb minio/warehouse
            docker exec minio mc cp -r /input/tpch.sf01/ minio/warehouse/tpch.sf01/
            docker run -d --name rest \
              --network=iceberg_net \
              -p 8181:8181 \
              -v ${{ github.workspace }}/assets/rest:/tmp \
              -e AWS_ACCESS_KEY_ID=root \
              -e AWS_SECRET_ACCESS_KEY=password \
              -e AWS_ENDPOINT_URL=http://minio:9000 \
              -e AWS_REGION=us-east-1 \
              -e CATALOG_S3_ENDPOINT=http://minio:9000 \
              -e CATALOG_WAREHOUSE=s3://warehouse \
              -e CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO apache/iceberg-rest-fixture
          post:
            docker stop rest minio
            docker rm rest minio
            docker network rm iceberg_net
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
            components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Build and test
        run: make all LIB_NAME="libiceberg_rust_ffi.so"
      # Make a post action to stop all containers
      - name: Stop containers
        run: |
